@model PDMSCore.DataManipulation.DataGridField

@*<form id="@Model.ID-save" method="post">*@
<form id="@Model.ID-Form">
    <div class="TableWrapper" id="@Model.ID">
        <div>
            <button id="@Model.ID-SaveMenuBtn" style="width:100px;"><i class="fa fa-save"></i> Save</button>
            <button type="button" id="@Model.ID-SavedMenuBtn" style="width:100px; background-color: limegreen; border-color: limegreen; display: none;"><i class="fa fa-save"></i> Saved</button>
            <button type="button" onclick="AddRowModal()"><i class="fa fa-plus"></i> Add</button>
        </div>

        <div class="tbl-header">
            <table class="GridTable" id="@Model.HTMLHeaderID">
                @*<table class="GridTable" id="IDGridTable-h">*@
                <thead>@Model.HtmlTextHeaderRow()</thead>
            </table>
        </div>
        @*Roturka*@
        @*<div id="loader_container">
                <div class="loader_div">
                    <div class="loader_div">
                        <div class="loader_div">
                            <div class="loader_div">
                                <div class="loader_div">
                                    <div class="loader_div">
                                        <div class="loader_div">
                                            <div class="loader_div">
                                                <div class="loader_div">
                                                    <div class="loader_div">

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>*@
        <div id="@Model.ID-c" class="tbl-content">
            <table class="GridTable">
                @*<tbody id="dg-@Model.ID-b">*@
                @Model.HtmlTextTableBody()
                @*</tbody>*@

            </table>
        </div>
    </div>
</form>

@if (Model.AddRowDialog != null)
{
    <div id="@Model.ID-AddRowModal" class="Modal" style="display: none;">
        @await Html.PartialAsync("~/Views/ModalDialog/ModalPartial.cshtml", Model.AddRowDialog)
    </div>
}

@*<div id="@Model.ID-AddRowModal" class="Modal" style="display: none;">
    <div class="ModalBody">
    </div>
</div>*@

<script>
    $("#@Model.ID-SaveMenuBtn").on("click", function (event) {
        console.log("AjaxSave");
        var frmValues = $("#@Model.ID-Form").serialize();
        $.ajax({
            type: "POST",
            url: "/" + "@Model.ParentControllerAndAction" + "/",
            data: { ID: "@Model.ID", What: "AjaxSave", Data: frmValues },

            success: function (partialViewResult)
            {
                if (partialViewResult == "ok") {
                    console.log("AjaxSave:Success");
                    ElementHideShow("@Model.ID-SaveMenuBtn", "@Model.ID-SavedMenuBtn", 'h')
                    setTimeout(ElementHideShow, 2000, "@Model.ID-SaveMenuBtn", "@Model.ID-SavedMenuBtn", 's');
                    
                }
                else {
                    //TODO
                }
            },
            fail: function ()
            {
                alert("AjaxSave:Fail");
                console.log("AjaxSave:Fail");
            }
        });
        event.preventDefault();
    });

    function ElementHideShow(ElementIDSave, ElementIDSaved, HideOrShow) {
        console.log("DelayedElementHideShow");
        if (HideOrShow == 's') {
            $("#" + ElementIDSave).show();
            $("#" + ElementIDSaved).hide();
        }
        else {
            $("#" + ElementIDSave).hide();
            $("#" + ElementIDSaved).show();
        }
    }

    function AddRowModal() {
        console.log("AddRowModal");
        var TargetURL = "/" + "@Model.ParentControllerAndAction" + "/";

        $.ajax({
            url: TargetURL,
            type: "GET",
            //data: { DataGridID: "@Model.ID"},
            data: { ID: "@Model.ID", What: "AddRowModal", Data: ""},

            success: function (partialViewResult) {
                if (partialViewResult.length > 0) {
                    $("#" + "@Model.ID-AddRowModal-Body-Form-C").html(partialViewResult);
                    
                }
            },
            error: function (result) {
                $("#" + dialogTagID).html("<div class=\"ModalBody\">\r\n<span class=\"CloseModal\">&times;</span>\r\n<p>Ajax failed...</p>\r\n</div>");
                console.log("AddRowModal-error");
            }
        });
        document.getElementById("@Model.ID-AddRowModal").style.display = "block";
    };



    $(document).ready(function () {
        console.log("Ready");
        @*document.getElementById("@Model.FocusControlID").focus();*@
    });


    function ScrollTableToBottom()
    {
        var hc = $('#@Model.ID-c').height();
        var hb = $('#@Model.ID-b').height();

        var h = Math.max(hc, hb);
        console.log("height:" + h);

        $('#@Model.ID-c').scrollTop(h);
    }

    //http://jsfiddle.net/thrilleratplay/epcybL4v/
    $(function () {
        var thElm;
        var startOffset;

        Array.prototype.forEach.call(
            document.querySelectorAll("table th"),
            function (th) {
                th.style.position = 'relative';

                var grip = document.createElement('div');
                grip.innerHTML = "&nbsp;";
                //grip.style.backgroundColor = 'red';
                grip.style.zIndex = '2';
                grip.style.top = 0;
                grip.style.right = '-8px';
                grip.style.bottom = 0;
                grip.style.width = '15px';

                grip.style.position = 'absolute';
                grip.style.cursor = 'col-resize';
                grip.addEventListener('mousedown', function (e) {
                    console.log("mousedown:" + th);

                    thElm = th;
                    startOffset = th.offsetWidth - e.pageX;
                });

                th.appendChild(grip);
            });

        document.addEventListener('mousemove', function (e) {

            if (thElm) {

                //$(thElm).prev()[0].style.width = startOffset + e.pageX + 'px'; //Nakonec tohle nebylo nutne
                thElm.style.width = startOffset + e.pageX + 'px';

                console.log("mousemove");
                ResizeColumns();
            }
        });

        document.addEventListener('mouseup', function () {
            thElm = undefined;
        });
    });

    function ResizeColumns()
    {
        console.log("ResizeColumns");
        var $HeaderTable = $('#' + "@Model.HTMLHeaderID");
        var $BodyTable = $('#' + "@Model.HTMLBodyID");
        var $HeaderCells = $HeaderTable.find('thead tr:first').children();

        var colWidths = $HeaderCells.map(function () {
        return $(this).width();
        }).get();

        $BodyTable.find('tr').children().each(function (i, v) {
        $(v).width(colWidths[i]);
        });
    }

    $(window).on("load resize ", OnPageResize).resize();

    function OnPageResize() {
        //  https://codepen.io/nikhil8krishnan/pen/WvYPvv?editors=1100
        //  https://davidwalsh.name/detect-scrollbar-width

        console.log("OnPageResize");

        var scrollDiv = document.getElementsByClassName("tbl-content");
        if (scrollDiv[0] != null)
        {
            var scrollbarWidth = scrollDiv[0].offsetWidth - scrollDiv[0].clientWidth - 1;
            $('.tbl-header').css({ 'padding-right': scrollbarWidth });
        }
        ResizeColumns();
    };

    //Nemuzu pouzit toto:  "$(".GridTable td").click(function () {"  na dynamicky generovany obsah.
    $(document).on("click", '.GridTable td', function (event) {
        $(this).parent().addClass('SingleSelected').siblings().removeClass('SingleSelected');
        var value = $(this).find('td:first').html();
        $('#ModalOk').removeAttr("disabled");
        console.log("click: .GridTable td");
    });

    // Toto se Ajaxem neobnovuje a proto to muze zustat
    $(".GridTable th").click(function () {
        $(this).closest(".TableWrapper").find(".SingleSelected").removeClass('SingleSelected');
        $('#ModalOk').attr("disabled", "");
    });

    $(document).on("dblclick", '.GridTable tr', function (event) {
        $(this).addClass('SingleSelected').siblings().removeClass('SingleSelected');
        var RowID = $(this).find('td:first').html();
        OkButtonClicked(RowID);
    });

    function GetHeaderRowValuesFromID(TableID)
    {
        console.log("GetHeaderRowValuesFromID");
        var table = $("#" + TableID);
        var HeaderRow = $(table).find("tr");
        console.log("GetHeaderRowValuesFromID");

        var filtres = $(HeaderRow).find(".filter");

        var str = "";
        var al = [];
        for (var i = 0; i < filtres.length; i++)
        {
            al[i] = filtres[i].value;
            str = str + filtres[i].value + "&";
        }

        //for (var i = 0; i < al.length; i++) {
        //    console.log(al[i]);
        //}
        //return al;
        return str;
    };

    function ReloadDataGridAndScrollToBottom() {
        ReloadDataGrid();
        setTimeout(ScrollTableToBottom, 300);
    }
    //function ReloadDataGrid(DataGridID, returnFieldID) {
    function ReloadDataGrid() {
        console.log("ReloadDataGrid");

        var filterValues = GetHeaderRowValuesFromID("@Model.HTMLHeaderID");
        var TargetURL = "/" + "@Model.ParentControllerAndAction" + "/";

        try
        {
            $('#loader_container').show();
            $.ajax({
                type: "GET",
                //dataType: "json",  // Nesmi tu byt

                url: TargetURL,
                //url: "/DataGrid/GetDataGridContent/",
                traditional: true,
                data:
                {
                    ID: "@Model.ID",
                    What: "RefreshData",
                    Data: filterValues,
                },
                contentType: "application/json; charset=utf-8",
                success: function (partialViewResult)
                {
                    console.log("ReloadDataGrid: success");
                    $('#loader_container').hide();

                    if (partialViewResult.length > 0)
                        $("#" + "@Model.HTMLBodyID").replaceWith(partialViewResult);

                    OnPageResize();

                    //if (GetTableRowCount(DataGridBodyID) == 1) {
                    //    $('#' + DataGridBodyID).find('tr:first').addClass('SingleSelected');
                    //    $('#ModalOk').removeAttr("disabled");
                    //}
                    //else
                    //    $('#ModalOk').attr("disabled", "");
                },
                error: function (result)
                {
                    console.log("ReloadDataGrid: error");
                    $('#loader_container').hide();
                    $("#" + @Model.HTMLBodyID).replaceWith("<span>DataGridPartialView: Ajax failed...</span>");
                }
            });
        }
        catch (err) {
            console.log(err);
            $('#loader_container').hide();
        }
    };

    // Automaticke zvoleni radky v table po stisku Enter pokud je vyfiltrovana pouze jedina radka.
    $('.filter').keyup(function (e) {
        if (e.keyCode == 13) {
            if (GetTableRowCount(@Model.HTMLBodyID) == 1) {
                var OnlyRowInTable = $("#" + @Model.HTMLBodyID).find('tr:first');
                if (OnlyRowInTable != null) {
                    var RowID = $(OnlyRowInTable).find('td:first').html();
                    OkButtonClicked(RowID);
                }
            }
        }
    });

    function GetTableRowCount(tableID) {
        var obj = document.getElementById(tableID).getElementsByTagName("tr");
        if (obj != null) {
            var rows = obj.length;
            return rows;
        }
        return -1;
    }

    function OnDataGridFilterChange(FilterID) {
        console.log("OnDataGridFilterChange");

        //TODO: Pozdeji, pokud budu chtit aktualizovat datagrid pouze kdyz bude velikost filtru > X znaku.
        //var value = $("#" + FilterID).val();
        //if (value.length > 2) {
        //    console.log(">2");
        //    ReloadDataGrid('gridID-input', 'Hovno')
        //}

        //ReloadDataGrid('gridID-input', 'Hovno');
        ReloadDataGrid();
    };

</script>
